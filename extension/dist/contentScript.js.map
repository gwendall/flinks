{"version":3,"file":"contentScript.js","mappingsvIA;AACA;AACA;AACA;AACA","sources":["webpack://my-chrome-extension/./src/contentScript.ts","webpack://my-chrome-extension/webpack/before-startup","webpack://my-chrome-extension/webpack/startup","webpack://my-chrome-extension/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst CORS_PROXY = 'https://punkcam-cors-anywhere-99a09af4e7c4.herokuapp.com/';\nconst PUNKCAM_LINK = \"https://labs.punk.cam/embed?url=https%3A%2F%2Fpunkmaker.xyz%2Fapi%2Fog%3Fp%3D002-061-048-050%26mode%3Drender%26background%3D0\";\nfunction parseMetaString(metaString) {\n    if (!metaString)\n        return {};\n    // Define a regular expression to match key-value pairs\n    const regex = /(\\w+)=\"([^\"]+)\"/g;\n    const result = {};\n    let match;\n    // Iterate through all matches\n    while ((match = regex.exec(metaString)) !== null) {\n        const key = match[1];\n        const value = match[2];\n        result[key] = value;\n    }\n    return result;\n}\nfunction fetchMetatags(src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield fetch(src, {\n            mode: 'cors',\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const htmlText = yield response.text();\n        // Parse the HTML content\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(htmlText, 'text/html');\n        // Extract meta tags\n        const metaElements = Array.from(doc.querySelectorAll('meta'));\n        const elements = metaElements === null || metaElements === void 0 ? void 0 : metaElements.map((e) => parseMetaString(e.rawAttrs)).reduce((acc, curr) => (Object.assign(Object.assign({}, acc), (curr.name ? {\n            [curr.name]: curr.content\n        } : {}))), {});\n        return elements;\n    });\n}\nfunction buildIframe(src) {\n    const iframe = document.createElement('iframe');\n    iframe.classList.add('flinks-iframe');\n    iframe.src = src;\n    iframe.allow = 'camera;microphone';\n    // @ts-ignore\n    iframe.allowusermedia = 'true';\n    iframe.addEventListener('load', () => {\n        iframe.style.opacity = '1'; // Fade in\n    });\n    const aspectRatioContainer = document.createElement('div');\n    aspectRatioContainer.classList.add('flinks-aspect-ratio-container');\n    const loadingContainer = document.createElement('div');\n    loadingContainer.classList.add('flinks-loading-container');\n    loadingContainer.textContent = 'Loading frame...';\n    aspectRatioContainer.appendChild(loadingContainer);\n    aspectRatioContainer.appendChild(iframe);\n    return aspectRatioContainer;\n}\nconst processedTweetTexts = new Set();\nfunction replaceDOMElements() {\n    const tweets = document.querySelectorAll('[data-testid=\"tweet\"]');\n    tweets.forEach((tweet) => {\n        var _a;\n        const tweetText = tweet.querySelector('[data-testid=\"tweetText\"]');\n        if (tweetText && !processedTweetTexts.has(tweetText)) {\n            tweetText.style.overflowX = 'visible';\n            tweetText.style.overflowY = 'visible';\n            processedTweetTexts.add(tweetText);\n            // const iframe = buildIframe(PUNKCAM_LINK);\n            // tweetText?.appendChild(iframe);\n            const tweetTextLinks = ((_a = tweetText === null || tweetText === void 0 ? void 0 : tweetText.textContent) === null || _a === void 0 ? void 0 : _a.match(/https?:\\/\\/[^\\s]+/g)) || [];\n            tweetTextLinks.filter(Boolean).forEach((tweetLink) => {\n                var _a;\n                console.log('Found tweet link:', tweetLink);\n                // fetchMetatags(tweetLink).then((metaTags) => {\n                //     console.log('Meta tags:', tweetLink, metaTags);\n                // });\n                const iframe = buildIframe(\"https://flinks-amber.vercel.app/frame?url=\" + encodeURIComponent(tweetLink));\n                // const iframe = buildIframe(tweetLink);\n                // const iframe = buildIframe(PUNKCAM_LINK);\n                // const iframe = buildIframe(\"http://localhost:3000/frame\");\n                (_a = tweetText === null || tweetText === void 0 ? void 0 : tweetText.parentElement) === null || _a === void 0 ? void 0 : _a.appendChild(iframe);\n            });\n            if (tweetTextLinks.length > 0) {\n                const tweetPhotos = tweet.querySelectorAll('[data-testid=\"tweetPhoto\"]');\n                tweetPhotos.forEach(tweetPhoto => {\n                    if (tweetPhoto instanceof HTMLElement) {\n                        tweetPhoto.remove();\n                    }\n                });\n                const tweetCards = tweet.querySelectorAll('[data-testid=\"card.wrapper\"]');\n                tweetCards.forEach(tweetCard => {\n                    if (tweetCard instanceof HTMLElement) {\n                        tweetCard.remove();\n                    }\n                });\n            }\n        }\n        /*\n        const tweetCards = tweet.querySelectorAll('[data-testid=\"card.wrapper\"]'); // Select elements with data-testid=\"card.wrapper\"\n        tweetCards.forEach(tweetCard => {\n            if (tweetCard instanceof HTMLElement) {\n                const link = tweetCard.querySelector('a[href]');\n                const href = link?.getAttribute('href');\n                const img = tweetCard.querySelector('img[src]');\n                const src = img?.getAttribute('src');\n                if (src && img && href) {\n                    while (tweetCard.firstChild) {\n                        tweetCard.removeChild(tweetCard.firstChild);\n                    }\n                    const iframe = buildIframe(PUNKCAM_LINK);\n                    tweetCard.style.overflow = 'hidden';\n                    tweetCard.appendChild(iframe);\n                    console.log('Replaced tweetCard content with iframe:', tweetCard);\n                }\n\n            }\n        });\n        */\n    });\n}\ndocument.addEventListener('DOMContentLoaded', replaceDOMElements);\n// Observe changes in the DOM and replace elements dynamically:\nconst observer = new MutationObserver(replaceDOMElements);\nobserver.observe(document.body, { childList: true, subtree: true });\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/contentScript.ts\"]();\n",""],"names":[],"sourceRoot":""}